plugins {
    id("org.springframework.boot") version "2.3.4.RELEASE"
    id("io.spring.dependency-management") version "1.0.10.RELEASE"
}
apply plugin: "java"
apply plugin: "application"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

group 'com.onlineedu.outsource'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8


mainClassName = "com.onlineedu.outsource.OnlineTestEducationApplication"

jar {
    archiveName = project.name + "-" + project.version + ".jar"
//    from('src/main/webapp/static'){
//        into 'static'
//    }
}


sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }

}


repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url 'https://jitpack.io' }
    maven { url 'https://www.apache.org/licenses/LICENSE-2.0' }
}

dependencyManagement {
    imports {
        mavenBom 'com.alibaba.cloud:spring-cloud-alibaba-dependencies:2.2.1.RELEASE'
    }
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-openfeign:2.2.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.projectlombok:lombok'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.security:spring-security-test'
    compile 'com.baomidou:mybatis-plus-boot-starter:3.4.0'
    compile 'com.baomidou:mybatis-plus-generator:3.4.0'
    compile 'org.apache.velocity:velocity-engine-core:2.2'
    compile 'com.alibaba:druid:1.1.23'
    compile 'org.springframework.security:spring-security-jwt:1.0.10.RELEASE'
    compile group: 'cn.hutool', name: 'hutool-all', version: '5.4.1'
    compile 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompile 'junit:junit'
//    annotationProcessor 'mysql:mysql-connector-java'
    testCompileOnly 'org.springframework.boot:spring-boot-starter-test'

}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}


task createConfig {
    def configDir = file("build/config")
    outputs.dir configDir
    doLast {
        configDir.mkdirs()
    }
}

task copyConfig(type: Copy) {
    from("src/main/resources") {
        include "**/*.yml"
        include "**/*.properties"
    }
    into "build/config"
    dependsOn createConfig
}

distributions {
    main {
        baseName = "app"
        version = ""
        contents {
            eachFile {
                rename(project.name, "startup")
            }
            from(copyConfig) {
                into "config"
            }
        }
    }
}